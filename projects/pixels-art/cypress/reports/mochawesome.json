{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-03-22T22:52:39.446Z",
    "end": "2022-03-22T22:54:18.997Z",
    "duration": 99551,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ddca6146-69af-4dd7-97d8-dabb869a7450",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2687d55b-4cc4-4f77-b13d-fefc93debb05",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "64302141-6edf-45f9-af55-de085fbcdc1a",
              "parentUUID": "2687d55b-4cc4-4f77-b13d-fefc93debb05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64302141-6edf-45f9-af55-de085fbcdc1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 630,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "37fbcb68-7244-45bb-876f-8723635230c7",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "49c185ff-ab20-458e-b686-a5ab58cfeec5",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "7d00f2cb-d15b-47cf-ac43-9306dac9e2bc",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "00b3a418-c280-4173-9917-6fa1622f083c",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8bbc66cf-d27a-4d4a-a2f7-360805cf60b2",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4becdb5f-30e0-4b80-bc63-25faa223d078",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "afabab8f-c5d5-42f3-93c4-f7e6269abbae",
              "parentUUID": "593aba5f-74df-44f5-9b6c-27c6b6a1f2c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37fbcb68-7244-45bb-876f-8723635230c7",
            "49c185ff-ab20-458e-b686-a5ab58cfeec5",
            "7d00f2cb-d15b-47cf-ac43-9306dac9e2bc",
            "00b3a418-c280-4173-9917-6fa1622f083c",
            "8bbc66cf-d27a-4d4a-a2f7-360805cf60b2",
            "4becdb5f-30e0-4b80-bc63-25faa223d078",
            "afabab8f-c5d5-42f3-93c4-f7e6269abbae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2669,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b3f4fa1-9268-4aaa-88f4-4769bd935d8f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "630a9047-3934-4196-9f7f-f6c47f454cee",
              "parentUUID": "4b3f4fa1-9268-4aaa-88f4-4769bd935d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "e2b57870-39c1-4134-b706-3e96f267b505",
              "parentUUID": "4b3f4fa1-9268-4aaa-88f4-4769bd935d8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "630a9047-3934-4196-9f7f-f6c47f454cee",
            "e2b57870-39c1-4134-b706-3e96f267b505"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65add5b1-5e71-4a9a-931d-92f8e4f33dca",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "243ee158-1356-4c7f-82af-5e5871c3de25",
              "parentUUID": "65add5b1-5e71-4a9a-931d-92f8e4f33dca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "1dad7a65-15e9-4099-9d87-658be5cc0ae0",
              "parentUUID": "65add5b1-5e71-4a9a-931d-92f8e4f33dca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "76d56d52-be8c-45ca-9861-78cb565fd9de",
              "parentUUID": "65add5b1-5e71-4a9a-931d-92f8e4f33dca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e5fff6d2-a20d-4552-bf3b-7551a2bc51a9",
              "parentUUID": "65add5b1-5e71-4a9a-931d-92f8e4f33dca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "243ee158-1356-4c7f-82af-5e5871c3de25",
            "1dad7a65-15e9-4099-9d87-658be5cc0ae0",
            "76d56d52-be8c-45ca-9861-78cb565fd9de",
            "e5fff6d2-a20d-4552-bf3b-7551a2bc51a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1198,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b5c4097-32b4-47f2-876e-7a691758cf82",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e591c860-5e12-4636-b32a-1a520733c00b",
              "parentUUID": "2b5c4097-32b4-47f2-876e-7a691758cf82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3f219102-ca0d-4562-a2a4-80e514eb1a81",
              "parentUUID": "2b5c4097-32b4-47f2-876e-7a691758cf82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e591c860-5e12-4636-b32a-1a520733c00b",
            "3f219102-ca0d-4562-a2a4-80e514eb1a81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1547,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d945f6e0-6092-4ddb-980b-ebd27ecf0525",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "71bc1688-95bb-41d0-a688-3d33ca076013",
              "parentUUID": "d945f6e0-6092-4ddb-980b-ebd27ecf0525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0bc733e5-16e9-448c-bc2a-dec9f6c24ca2",
              "parentUUID": "d945f6e0-6092-4ddb-980b-ebd27ecf0525",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71bc1688-95bb-41d0-a688-3d33ca076013",
            "0bc733e5-16e9-448c-bc2a-dec9f6c24ca2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d65b497e-d888-44ce-90ae-f0b5ca77ff33",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "c7797fee-3b65-49d4-aa95-256858f841bc",
              "parentUUID": "d65b497e-d888-44ce-90ae-f0b5ca77ff33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "328e555b-5857-4183-a880-95b4e7342f29",
              "parentUUID": "d65b497e-d888-44ce-90ae-f0b5ca77ff33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7797fee-3b65-49d4-aa95-256858f841bc",
            "328e555b-5857-4183-a880-95b4e7342f29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24a7b44e-42cc-4ec4-89eb-610adc5cdf3d",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "1c33be7a-2dfe-444b-9ee4-d9a563f61071",
              "parentUUID": "24a7b44e-42cc-4ec4-89eb-610adc5cdf3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5723ed05-8c0a-4038-8aba-0261e5c564e8",
              "parentUUID": "24a7b44e-42cc-4ec4-89eb-610adc5cdf3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1823,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9abc555c-3fc4-455a-bea6-b5399210af73",
              "parentUUID": "24a7b44e-42cc-4ec4-89eb-610adc5cdf3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c33be7a-2dfe-444b-9ee4-d9a563f61071",
            "5723ed05-8c0a-4038-8aba-0261e5c564e8",
            "9abc555c-3fc4-455a-bea6-b5399210af73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d74863c4-4e3d-4b16-86f5-6cc8c99ef5ea",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "98397a2a-162f-480e-a3a4-80eafd3c7c8e",
              "parentUUID": "d74863c4-4e3d-4b16-86f5-6cc8c99ef5ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "7d13020b-4926-4d56-b0b3-fd5afe90c951",
              "parentUUID": "d74863c4-4e3d-4b16-86f5-6cc8c99ef5ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "3903e6b3-f058-466a-bf47-04d4c9e93a79",
              "parentUUID": "d74863c4-4e3d-4b16-86f5-6cc8c99ef5ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a561d27f-c7ef-4ae3-bedb-bbbb107be836",
              "parentUUID": "d74863c4-4e3d-4b16-86f5-6cc8c99ef5ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98397a2a-162f-480e-a3a4-80eafd3c7c8e",
            "7d13020b-4926-4d56-b0b3-fd5afe90c951",
            "3903e6b3-f058-466a-bf47-04d4c9e93a79",
            "a561d27f-c7ef-4ae3-bedb-bbbb107be836"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3503,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4589,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9da49968-6bbe-469d-ba2c-ddc5a042fd7e",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4699,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "84e8f7e1-2396-429b-92e2-e791a6a65938",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be2f888b-241a-4107-b71b-0332569f6640",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4754,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a52829dc-dec7-42a1-8e8f-4269d352b171",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0e05a1a-157e-4248-8d5f-822039c9bfa8",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5184,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "106fdbb0-1c38-431a-93eb-3af7313ec59d",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4898,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6885e989-6ec5-4605-8a98-d6269a267a56",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4702,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1ffb5e97-fee5-49b7-91ce-087e68eb97e1",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4496,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eb648d7e-389b-4648-ac55-12078d848a3c",
              "parentUUID": "fcd548ad-62ca-42b2-b2eb-e6b965ce36fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9da49968-6bbe-469d-ba2c-ddc5a042fd7e",
            "84e8f7e1-2396-429b-92e2-e791a6a65938",
            "be2f888b-241a-4107-b71b-0332569f6640",
            "a52829dc-dec7-42a1-8e8f-4269d352b171",
            "a0e05a1a-157e-4248-8d5f-822039c9bfa8",
            "106fdbb0-1c38-431a-93eb-3af7313ec59d",
            "6885e989-6ec5-4605-8a98-d6269a267a56",
            "1ffb5e97-fee5-49b7-91ce-087e68eb97e1",
            "eb648d7e-389b-4648-ac55-12078d848a3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43240,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "628cf867-85ae-4f8e-baf3-a9bdc9a6f1bf",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2bdd70ea-d8f5-445c-b480-da0d052f3863",
              "parentUUID": "628cf867-85ae-4f8e-baf3-a9bdc9a6f1bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "59bd7a0b-f50c-454b-8df4-74c056ad60db",
              "parentUUID": "628cf867-85ae-4f8e-baf3-a9bdc9a6f1bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5170,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33455/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33455/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33455/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33455/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33455/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33455/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0da6d6f-7653-44c1-abfc-8bffa7eff203",
              "parentUUID": "628cf867-85ae-4f8e-baf3-a9bdc9a6f1bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2bdd70ea-d8f5-445c-b480-da0d052f3863",
            "59bd7a0b-f50c-454b-8df4-74c056ad60db",
            "a0da6d6f-7653-44c1-abfc-8bffa7eff203"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d374d0d-2003-443b-9823-b0c877c82619",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33455/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33455/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33455/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33455/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33455/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33455/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33455/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d2d67ae4-5c1f-4fc4-9b71-2a4c4c338e23",
              "parentUUID": "6d374d0d-2003-443b-9823-b0c877c82619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 647,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33455/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33455/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33455/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33455/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33455/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33455/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33455/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33455/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33455/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33455/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33455/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33455/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d3e7a294-0fdf-486a-97b4-237b1f08a84e",
              "parentUUID": "6d374d0d-2003-443b-9823-b0c877c82619",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d2d67ae4-5c1f-4fc4-9b71-2a4c4c338e23",
            "d3e7a294-0fdf-486a-97b4-237b1f08a84e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}